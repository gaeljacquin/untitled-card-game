name: Deploy API to EC2

on:
  push:
    branches:
      - build/various-changes
    paths:
      - 'apps/api/**'
      - 'libs/shared/**'
      - '.github/workflows/deploy-api.yml'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install pnpm
        run: npm install -g pnpm@10.16.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build API
        run: cd apps/api && pnpm build

      - name: Create deployment package
        run: |
          mkdir -p deploy
          cp -r apps/api/dist deploy/
          cp apps/api/package.json deploy/
          cp -r libs/shared deploy/
          cd deploy
          tar -czf ../api-deploy.tar.gz .

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # Setup SSH
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/deploy_key.pem
          chmod 600 ~/.ssh/deploy_key.pem
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

          # Copy deployment package to EC2
          scp -i ~/.ssh/deploy_key.pem api-deploy.tar.gz $EC2_USER@$EC2_HOST:/tmp/api-deploy.tar.gz

          # Deploy commands
          ssh -i ~/.ssh/deploy_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            set -e

            # Backup current deployment
            if [ -d /opt/ucg-api/current ]; then
              sudo cp -r /opt/ucg-api/current /opt/ucg-api/backup-$(date +%Y%m%d-%H%M%S)
            fi

            # Extract new deployment
            sudo mkdir -p /opt/ucg-api/releases/${{ github.sha }}
            sudo tar -xzf /tmp/api-deploy.tar.gz -C /opt/ucg-api/releases/${{ github.sha }}

            # Install production dependencies
            cd /opt/ucg-api/releases/${{ github.sha }}
            sudo pnpm install --prod --frozen-lockfile

            # Update symlink
            sudo ln -sfn /opt/ucg-api/releases/${{ github.sha }} /opt/ucg-api/current

            # Restart service
            sudo systemctl restart ucg-api

            # Verify deployment
            sleep 5
            sudo systemctl status ucg-api

            # Cleanup old releases (keep last 5)
            cd /opt/ucg-api/releases
            ls -t | tail -n +6 | xargs -r sudo rm -rf

            # Cleanup temp file
            rm /tmp/api-deploy.tar.gz
          EOF

      - name: Verify deployment
        run: |
          # Wait for API to be ready
          sleep 10

          # Health check
          curl -f http://${{ secrets.EC2_HOST }}/ || exit 1

      - name: Notify on failure
        if: failure()
        run: |
          echo "Deployment failed! Check the logs."
          # Add Slack/Discord notification here if needed
